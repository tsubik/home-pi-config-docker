version: '3.4'

services:
  hass:
    container_name: hass
    image: lroguet/rpi-home-assistant:latest
    network_mode: host
    restart: unless-stopped
    privileged: true
    volumes:
      - /dev/bus/usb:/dev/bus/usb
      - /etc/localtime:/etc/localtime:ro
      - ${CONF_DIR}/home-assistant:/config
    environment:
      - PUID
      - PGID

  portainer:
    container_name: portainer
    image: portainer/portainer:linux-arm
    restart: unless-stopped
    networks:
      - default
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONF_DIR}/portainer:/data
    environment:
      - PUID
      - PGID

  # sonarr:
  #   container_name: sonarr
  #   image: lsioarmhf/sonarr
  #   restart: unless-stopped
  #   ports:
  #     - 8989:8989
  #   volumes:
  #     - ${CONF_DIR}/sonarr:/config
  #     - ${DATA_DIR}/torrents:/downloads
  #     - ${DATA_DIR}/movies:/movies
  #   environment:
  #     - PUID
  #     - PGID

  # radarr:
  #   container_name: radarr
  #   image: lsioarmhf/radarr
  #   restart: unless-stopped
  #   ports:
  #     - 7878:7878
  #   volumes:
  #     - ${CONF_DIR}/radarr:/config
  #     - ${DATA_DIR}/torrents:/downloads
  #   environment:
  #     - PUID
  #     - PGID

  # jackett:
  #   container_name: jackett
  #   image: lsioarmhf/jackett
  #   restart: unless-stopped
  #   ports:
  #     - 9117:9117
  #   volumes:
  #     - ${CONF_DIR}/jackett:/config
  #     - ${DATA_DIR}/torrents:/downloads
  #   environment:
  #     - PUID
  #     - PGID

  transmission:
    container_name: transmission
    build:
      context: ./docker-transmission-openvpn
      dockerfile: Dockerfile.armhf
    image: haugene/rpi-transmission-openvpn
    restart: unless-stopped
    devices:
      - /dev/net/tun
    cap_add:
      - NET_ADMIN
    ports:
      - 9091:9091
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - default
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONF_DIR}/transmission:/config
      - ${DATA_DIR}/torrents:/torrents
    environment:
      - LOCAL_NETWORK=192.168.0.0/24
      - OPENVPN_USERNAME
      - OPENVPN_PASSWORD
      - OPENVPN_PROVIDER
      - OPENVPN_CONFIG
      - OPENVPN_OPTS=--ping 10 --ping-exit 30
      - TRANSMISSION_HOME=/config
      - TRANSMISSION_DOWNLOAD_DIR=/torrents
      - TRANSMISSION_INCOMPLETE_DIR=/torrents/incomplete
      - TRANSMISSION_INCOMPLETE_DIR_ENABLED=true
      - TRANSMISSION_WATCH_DIR=/torrents/watch
      - TRANSMISSION_RPC_HOST_WHITELIST=home-pi.local
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
      - TRANSMISSION_RPC_USERNAME
      - TRANSMISSION_RPC_PASSWORD
      - PUID
      - PGID

  # plex:
  #   container_name: plex
  #   image: lsioarmhf/plex
  #   restart: unless-stopped
  #   network_mode: host
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${CONF_DIR}/plex:/config
  #     - ${DATA_DIR}/movies:/data/movies
  #     - ${DATA_DIR}/series:/data/tvshows
  #     - mediabox:/data/mediabox
  #   environment:
  #     - PUID
  #     - PGID

  organizr:
    container_name: organizr
    image: lsioarmhf/organizr
    restart: unless-stopped
    networks:
      - default
    volumes:
      - ${CONF_DIR}/organizr:/config
    environment:
      - PUID
      - GUID

  caddy:
    container_name: caddy
    build: ./dashboard
    restart: unless-stopped
    networks:
      - default
    ports:
      - 80:80
      - 443:443
    links:
      - hass
      - organizr
      - portainer
      - transmission
    environment:
      - CADDYPATH=/etc/caddy
      - CADDY_USERNAME
      - CADDY_PASSWORD
      - CADDY_HOME_DOMAIN
      - CADDY_HASS_DOMAIN
      - CADDY_TORRENTS_DOMAIN
      - CADDY_PLEX_DOMAIN
      - CADDY_PORTAINER_DOMAIN
    volumes:
      - ${CONF_DIR}/caddy:/etc/caddy
      - ${CONF_DIR}/caddy_certs:/root/.caddy
      - ${DATA_DIR}/movies:/mnt/data/movies
      - ${DATA_DIR}/series:/mnt/data/series
      - ${DATA_DIR}/torrents:/mnt/data/torrents

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet:  172.18.0.1/16

# volumes:
#   mediabox:
#     name: mediabox
#     driver: local
#     driver_opts:
#       type: cifs
#       device: ${MEDIABOX_URL}
#       o: username=${MEDIABOX_USERNAME},password=${MEDIABOX_PASSWORD},port=${MEDIABOX_PORT},vers=3.0,ro
